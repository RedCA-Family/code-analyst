{"total":230,"p":1,"ps":500,"rules":[{"key":"csharpsquid:S4524","repo":"csharpsquid","name":"\"default\" clauses should be first or last","severity":"CRITICAL","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S2479","repo":"csharpsquid","name":"Whitespace and control characters in string literals should be explicit","severity":"CRITICAL","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4507","repo":"csharpsquid","name":"Delivering code in production with debug features activated is security-sensitive","severity":"MINOR","lang":"cs","params":[],"type":"SECURITY_HOTSPOT"},{"key":"csharpsquid:S5034","repo":"csharpsquid","name":"\"ValueTask\" should be consumed correctly","severity":"CRITICAL","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S2699","repo":"csharpsquid","name":"Tests should include assertions","severity":"BLOCKER","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4635","repo":"csharpsquid","name":"String offset-based methods should be preferred for finding substrings from offsets","severity":"CRITICAL","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1128","repo":"csharpsquid","name":"Unused \"using\" should be removed","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S5042","repo":"csharpsquid","name":"Expanding archive files is security-sensitive","severity":"CRITICAL","lang":"cs","params":[],"type":"SECURITY_HOTSPOT"},{"key":"csharpsquid:S4201","repo":"csharpsquid","name":"Null checks should not be used with \"is\"","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4564","repo":"csharpsquid","name":"ASP.NET HTTP request validation feature should not be disabled","severity":"MAJOR","lang":"cs","params":[],"type":"VULNERABILITY"},{"key":"csharpsquid:S5659","repo":"csharpsquid","name":"JWT should be signed and verified with strong cipher algorithms","severity":"CRITICAL","lang":"cs","params":[],"type":"VULNERABILITY"},{"key":"csharpsquid:S2952","repo":"csharpsquid","name":"Classes should \"Dispose\" of members from the classes' own \"Dispose\" methods","severity":"CRITICAL","lang":"cs","params":[],"type":"BUG"},{"key":"csharpsquid:S5547","repo":"csharpsquid","name":"Cipher algorithms should be robust","severity":"CRITICAL","lang":"cs","params":[],"type":"VULNERABILITY"},{"key":"csharpsquid:S5542","repo":"csharpsquid","name":"Encryption algorithms should be used with secure mode and padding scheme","severity":"BLOCKER","lang":"cs","params":[],"type":"VULNERABILITY"},{"key":"csharpsquid:S4212","repo":"csharpsquid","name":"Serialization constructors should be secured","severity":"MAJOR","lang":"cs","params":[],"type":"VULNERABILITY"},{"key":"csharpsquid:S3240","repo":"csharpsquid","name":"The simplest possible condition syntax should be used","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4787","repo":"csharpsquid","name":"Encrypting data is security-sensitive","severity":"CRITICAL","lang":"cs","params":[],"type":"SECURITY_HOTSPOT"},{"key":"csharpsquid:S2245","repo":"csharpsquid","name":"Using pseudorandom number generators (PRNGs) is security-sensitive","severity":"CRITICAL","lang":"cs","params":[],"type":"SECURITY_HOTSPOT"},{"key":"csharpsquid:S2486","repo":"csharpsquid","name":"Generic exceptions should not be ignored","severity":"MINOR","lang":"cs","params":[],"type":"VULNERABILITY"},{"key":"csharpsquid:S3330","repo":"csharpsquid","name":"Creating cookies without the \"HttpOnly\" flag is security-sensitive","severity":"MINOR","lang":"cs","params":[],"type":"SECURITY_HOTSPOT"},{"key":"csharpsquid:S2255","repo":"csharpsquid","name":"Writing cookies is security-sensitive","severity":"MINOR","lang":"cs","params":[],"type":"SECURITY_HOTSPOT"},{"key":"csharpsquid:S2252","repo":"csharpsquid","name":"For-loop conditions should be true at least once","severity":"MAJOR","lang":"cs","params":[],"type":"BUG"},{"key":"csharpsquid:S4432","repo":"csharpsquid","name":"AES encryption algorithm should be used with secured mode","severity":"CRITICAL","lang":"cs","params":[],"type":"VULNERABILITY"},{"key":"csharpsquid:S2251","repo":"csharpsquid","name":"A \"for\" loop update clause should move the counter in the right direction","severity":"MAJOR","lang":"cs","params":[],"type":"BUG"},{"key":"csharpsquid:S4004","repo":"csharpsquid","name":"Collection properties should be readonly","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4487","repo":"csharpsquid","name":"Unread \"private\" fields should be removed","severity":"CRITICAL","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S109","repo":"csharpsquid","name":"Magic numbers should not be used","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1301","repo":"csharpsquid","name":"\"switch\" statements should have at least 3 \"case\" clauses","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4136","repo":"csharpsquid","name":"Method overloads should be grouped together","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S2755","repo":"csharpsquid","name":"XML parsers should not be vulnerable to XXE attacks","severity":"BLOCKER","lang":"cs","params":[],"type":"VULNERABILITY"},{"key":"csharpsquid:S2070","repo":"csharpsquid","name":"SHA-1 and Message-Digest hash algorithms should not be used in secure contexts","severity":"CRITICAL","lang":"cs","params":[],"type":"VULNERABILITY"},{"key":"csharpsquid:S1199","repo":"csharpsquid","name":"Nested code blocks should not be used","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4583","repo":"csharpsquid","name":"Calls to delegate's method \"BeginInvoke\" should be paired with calls to \"EndInvoke\"","severity":"CRITICAL","lang":"cs","params":[],"type":"BUG"},{"key":"csharpsquid:S3949","repo":"csharpsquid","name":"Calculations should not overflow","severity":"MAJOR","lang":"cs","params":[],"type":"BUG"},{"key":"csharpsquid:S2857","repo":"csharpsquid","name":"SQL keywords should be delimited by whitespace","severity":"BLOCKER","lang":"cs","params":[],"type":"BUG"},{"key":"csharpsquid:S2302","repo":"csharpsquid","name":"\"nameof\" should be used","severity":"CRITICAL","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1104","repo":"csharpsquid","name":"Fields should not have public accessibility","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4143","repo":"csharpsquid","name":"Collection elements should not be replaced unconditionally","severity":"MAJOR","lang":"cs","params":[],"type":"BUG"},{"key":"csharpsquid:S4830","repo":"csharpsquid","name":"Server certificates should be verified during SSL/TLS connections","severity":"CRITICAL","lang":"cs","params":[],"type":"VULNERABILITY"},{"key":"csharpsquid:S4275","repo":"csharpsquid","name":"Getters and setters should access the expected fields","severity":"CRITICAL","lang":"cs","params":[],"type":"BUG"},{"key":"csharpsquid:S2092","repo":"csharpsquid","name":"Creating cookies without the \"secure\" flag is security-sensitive","severity":"MINOR","lang":"cs","params":[],"type":"SECURITY_HOTSPOT"},{"key":"common-cs:FailedUnitTests","repo":"common-cs","name":"Failed unit tests should be fixed","severity":"MAJOR","lang":"cs","params":[],"type":"BUG"},{"key":"common-cs:SkippedUnitTests","repo":"common-cs","name":"Skipped unit tests should be either removed or fixed","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"common-cs:DuplicatedBlocks","repo":"common-cs","name":"Source files should not have any duplicated blocks","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"common-cs:InsufficientCommentDensity","repo":"common-cs","name":"Source files should have a sufficient density of comment lines","severity":"MAJOR","lang":"cs","params":[{"key":"minimumCommentDensity","defaultValue":"25","type":"FLOAT"}],"type":"CODE_SMELL"},{"key":"common-cs:InsufficientLineCoverage","repo":"common-cs","name":"Lines should have sufficient coverage by tests","severity":"MAJOR","lang":"cs","params":[{"key":"minimumLineCoverageRatio","defaultValue":"65","type":"FLOAT"}],"type":"CODE_SMELL"},{"key":"common-cs:InsufficientBranchCoverage","repo":"common-cs","name":"Branches should have sufficient coverage by tests","severity":"MAJOR","lang":"cs","params":[{"key":"minimumBranchCoverageRatio","defaultValue":"65","type":"FLOAT"}],"type":"CODE_SMELL"},{"key":"csharpsquid:S2344","repo":"csharpsquid","name":"Enumeration type names should not have \"Flags\" or \"Enum\" suffixes","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1135","repo":"csharpsquid","name":"Track uses of \"TODO\" tags","severity":"INFO","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S2345","repo":"csharpsquid","name":"Flags enumerations should explicitly initialize all their members","severity":"MINOR","lang":"cs","params":[],"type":"BUG"},{"key":"csharpsquid:S3431","repo":"csharpsquid","name":"\"[ExpectedException]\" should not be used","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S2221","repo":"csharpsquid","name":"\"Exception\" should not be caught when not required by called methods","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S2342","repo":"csharpsquid","name":"Enumeration types should comply with a naming convention","severity":"MINOR","lang":"cs","params":[{"key":"format","htmlDesc":"Regular expression used to check the enumeration type names against.","defaultValue":"^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?$","type":"STRING"},{"key":"flagsAttributeFormat","htmlDesc":"Regular expression used to check the flags enumeration type names against.","defaultValue":"^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?s$","type":"STRING"}],"type":"CODE_SMELL"},{"key":"csharpsquid:S2228","repo":"csharpsquid","name":"Console logging should not be used","severity":"MINOR","lang":"cs","params":[],"type":"VULNERABILITY"},{"key":"csharpsquid:S1940","repo":"csharpsquid","name":"Boolean checks should not be inverted","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S2357","repo":"csharpsquid","name":"Fields should be private","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1147","repo":"csharpsquid","name":"Exit methods should not be called","severity":"BLOCKER","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1145","repo":"csharpsquid","name":"Useless \"if(true) {...}\" and \"if(false){...}\" blocks should be removed","severity":"MAJOR","lang":"cs","params":[],"type":"BUG"},{"key":"csharpsquid:S3444","repo":"csharpsquid","name":"Interfaces should not simply inherit from base interfaces with colliding members","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1264","repo":"csharpsquid","name":"A \"while\" loop should be used instead of a \"for\" loop","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3440","repo":"csharpsquid","name":"Variables should not be checked against the values they're about to be assigned","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3441","repo":"csharpsquid","name":"Redundant property names should be omitted in anonymous classes","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S881","repo":"csharpsquid","name":"Increment (++) and decrement (--) operators should not be used in a method call or mixed with other operators in an expression","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1821","repo":"csharpsquid","name":"\"switch\" statements should not be nested","severity":"CRITICAL","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1939","repo":"csharpsquid","name":"Inheritance list should not be redundant","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3897","repo":"csharpsquid","name":"Classes that provide \"Equals(<T>)\" should implement \"IEquatable<T>\"","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3898","repo":"csharpsquid","name":"Value types should implement \"IEquatable<T>\"","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S2325","repo":"csharpsquid","name":"Methods and properties that don't access instance data should be static","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3532","repo":"csharpsquid","name":"Empty \"default\" clauses should be removed","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4069","repo":"csharpsquid","name":"Operator overloads should have named alternatives","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S2328","repo":"csharpsquid","name":"\"GetHashCode\" should not reference mutable fields","severity":"MINOR","lang":"cs","params":[],"type":"BUG"},{"key":"csharpsquid:S2327","repo":"csharpsquid","name":"\"try\" statements with identical \"catch\" and/or \"finally\" blocks should be merged","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1116","repo":"csharpsquid","name":"Empty statements should be removed","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1905","repo":"csharpsquid","name":"Redundant casts should not be used","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4060","repo":"csharpsquid","name":"Non-abstract attributes should be sealed","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4061","repo":"csharpsquid","name":"\"params\" should be used instead of \"varargs\"","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1125","repo":"csharpsquid","name":"Boolean literals should not be redundant","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S2333","repo":"csharpsquid","name":"Redundant modifiers should not be used","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1244","repo":"csharpsquid","name":"Floating point numbers should not be tested for equality","severity":"MAJOR","lang":"cs","params":[],"type":"BUG"},{"key":"csharpsquid:S2330","repo":"csharpsquid","name":"Array covariance should not be used","severity":"CRITICAL","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S2339","repo":"csharpsquid","name":"Public constant members should not be used","severity":"CRITICAL","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S2219","repo":"csharpsquid","name":"Runtime type checking should be simplified","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1481","repo":"csharpsquid","name":"Unused local variables should be removed","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4070","repo":"csharpsquid","name":"Non-flags enums should not be marked with \"FlagsAttribute\"","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S2148","repo":"csharpsquid","name":"Underscores should be used to make large numbers readable","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3235","repo":"csharpsquid","name":"Redundant parentheses should not be used","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3236","repo":"csharpsquid","name":"Caller information arguments should not be provided explicitly","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S2386","repo":"csharpsquid","name":"Mutable fields should not be \"public static\"","severity":"MINOR","lang":"cs","params":[],"type":"VULNERABILITY"},{"key":"csharpsquid:S3234","repo":"csharpsquid","name":"\"GC.SuppressFinalize\" should not be invoked for types without destructors","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S2387","repo":"csharpsquid","name":"Child class fields should not shadow parent class fields","severity":"BLOCKER","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3353","repo":"csharpsquid","name":"Unchanged local variables should be \"const\"","severity":"CRITICAL","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1858","repo":"csharpsquid","name":"\"ToString()\" calls should not be redundant","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S2701","repo":"csharpsquid","name":"Literal boolean values should not be used in assertions","severity":"CRITICAL","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3908","repo":"csharpsquid","name":"Generic event handlers should be used","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3909","repo":"csharpsquid","name":"Collections should implement the generic interface","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3247","repo":"csharpsquid","name":"Duplicate casts should not be made","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1067","repo":"csharpsquid","name":"Expressions should not be too complex","severity":"CRITICAL","lang":"cs","params":[{"key":"max","htmlDesc":"Maximum number of allowed conditional operators in an expression","defaultValue":"3","type":"INTEGER"}],"type":"CODE_SMELL"},{"key":"csharpsquid:S2156","repo":"csharpsquid","name":"\"sealed\" classes should not have \"protected\" members","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3366","repo":"csharpsquid","name":"\"this\" should not be exposed from constructors","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3242","repo":"csharpsquid","name":"Method parameters should be declared with base types","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1185","repo":"csharpsquid","name":"Overriding members should do more than simply call the same member in the base class","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S2955","repo":"csharpsquid","name":"Generic parameters not constrained to reference types should not be compared to \"null\"","severity":"MINOR","lang":"cs","params":[],"type":"BUG"},{"key":"csharpsquid:S3241","repo":"csharpsquid","name":"Methods should not return values that are never used","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3215","repo":"csharpsquid","name":"\"interface\" instances should not be cast to concrete types","severity":"CRITICAL","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3216","repo":"csharpsquid","name":"\"ConfigureAwait(false)\" should be used","severity":"CRITICAL","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3458","repo":"csharpsquid","name":"Empty \"case\" clauses that fall through to the \"default\" should be omitted","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3456","repo":"csharpsquid","name":"\"string.ToCharArray()\" should not be called redundantly","severity":"MINOR","lang":"cs","params":[],"type":"BUG"},{"key":"csharpsquid:S1155","repo":"csharpsquid","name":"\"Any()\" should be used to test for emptiness","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S131","repo":"csharpsquid","name":"\"switch/Select\" statements should contain a \"default/Case Else\" clauses","severity":"CRITICAL","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S134","repo":"csharpsquid","name":"Control flow statements \"if\", \"switch\", \"for\", \"foreach\", \"while\", \"do\"  and \"try\" should not be nested too deeply","severity":"CRITICAL","lang":"cs","params":[{"key":"max","htmlDesc":"Maximum allowed control flow statement nesting depth.","defaultValue":"3","type":"INTEGER"}],"type":"CODE_SMELL"},{"key":"csharpsquid:S4784","repo":"csharpsquid","name":"Using regular expressions is security-sensitive","severity":"CRITICAL","lang":"cs","params":[],"type":"SECURITY_HOTSPOT"},{"key":"csharpsquid:S3459","repo":"csharpsquid","name":"Unassigned members should be removed","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1151","repo":"csharpsquid","name":"\"switch case\" clauses should not have too many lines of code","severity":"MAJOR","lang":"cs","params":[{"key":"max","htmlDesc":"Maximum number of statements.","defaultValue":"8","type":"INTEGER"}],"type":"CODE_SMELL"},{"key":"csharpsquid:S2360","repo":"csharpsquid","name":"Optional parameters should not be used","severity":"CRITICAL","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S127","repo":"csharpsquid","name":"\"for\" loop stop conditions should be invariant","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3450","repo":"csharpsquid","name":"Parameters with \"[DefaultParameterValue]\" attributes should also be marked \"[Optional]\"","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S126","repo":"csharpsquid","name":"\"if ... else if\" constructs should end with \"else\" clauses","severity":"CRITICAL","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3220","repo":"csharpsquid","name":"Method calls should not resolve ambiguously to overloads with \"params\"","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3906","repo":"csharpsquid","name":"Event Handlers should have the correct signature","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S2934","repo":"csharpsquid","name":"Property assignments should not be made for \"readonly\" fields not constrained to reference types","severity":"MINOR","lang":"cs","params":[],"type":"BUG"},{"key":"csharpsquid:S3902","repo":"csharpsquid","name":"\"Assembly.GetExecutingAssembly\" should not be called","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S2931","repo":"csharpsquid","name":"Classes with \"IDisposable\" members should implement \"IDisposable\"","severity":"BLOCKER","lang":"cs","params":[],"type":"BUG"},{"key":"csharpsquid:S3900","repo":"csharpsquid","name":"Arguments of public methods should be validated against null","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S818","repo":"csharpsquid","name":"Literal suffixes should be upper case","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4790","repo":"csharpsquid","name":"Hashing data is security-sensitive","severity":"CRITICAL","lang":"cs","params":[],"type":"SECURITY_HOTSPOT"},{"key":"csharpsquid:S138","repo":"csharpsquid","name":"Functions should not have too many lines of code","severity":"MAJOR","lang":"cs","params":[{"key":"max","htmlDesc":"Maximum authorized lines of code in a method","defaultValue":"80","type":"INTEGER"}],"type":"CODE_SMELL"},{"key":"csharpsquid:S4792","repo":"csharpsquid","name":"Configuring loggers is security-sensitive","severity":"CRITICAL","lang":"cs","params":[],"type":"SECURITY_HOTSPOT"},{"key":"csharpsquid:S4005","repo":"csharpsquid","name":"\"System.Uri\" arguments should be used instead of strings","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3397","repo":"csharpsquid","name":"\"base.Equals\" should not be used to check for reference equality in \"Equals\" if \"base\" is not \"object\"","severity":"MINOR","lang":"cs","params":[],"type":"BUG"},{"key":"csharpsquid:S3717","repo":"csharpsquid","name":"Track use of \"NotImplementedException\"","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4002","repo":"csharpsquid","name":"Disposable types should declare finalizers","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1659","repo":"csharpsquid","name":"Multiple variables should not be declared on the same line","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3956","repo":"csharpsquid","name":"\"Generic.List\" instances should not be part of public APIs","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S2184","repo":"csharpsquid","name":"Results of integer division should not be assigned to floating point variables","severity":"MINOR","lang":"cs","params":[],"type":"BUG"},{"key":"csharpsquid:S103","repo":"csharpsquid","name":"Lines should not be too long","severity":"MAJOR","lang":"cs","params":[{"key":"maximumLineLength","htmlDesc":"The maximum authorized line length.","defaultValue":"200","type":"INTEGER"}],"type":"CODE_SMELL"},{"key":"csharpsquid:S4000","repo":"csharpsquid","name":"Pointers to unmanaged memory should not be visible","severity":"CRITICAL","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S105","repo":"csharpsquid","name":"Tabulation characters should not be used","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S104","repo":"csharpsquid","name":"Files should not have too many lines of code","severity":"MAJOR","lang":"cs","params":[{"key":"maximumFileLocThreshold","htmlDesc":"Maximum authorized lines in a file.","defaultValue":"1000","type":"INTEGER"}],"type":"CODE_SMELL"},{"key":"csharpsquid:S2183","repo":"csharpsquid","name":"Integral numbers should not be shifted by zero or more than their number of bits-1","severity":"MINOR","lang":"cs","params":[],"type":"BUG"},{"key":"csharpsquid:S106","repo":"csharpsquid","name":"Standard outputs should not be used directly to log anything","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3963","repo":"csharpsquid","name":"\"static\" fields should be initialized inline","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4018","repo":"csharpsquid","name":"Generic methods should provide type parameters","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3962","repo":"csharpsquid","name":"\"static readonly\" constants should be \"const\" instead","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1541","repo":"csharpsquid","name":"Methods and properties should not be too complex","severity":"CRITICAL","lang":"cs","params":[{"key":"maximumFunctionComplexityThreshold","htmlDesc":"The maximum authorized complexity.","defaultValue":"10","type":"INTEGER"}],"type":"CODE_SMELL"},{"key":"csharpsquid:S121","repo":"csharpsquid","name":"Control structures should use curly braces","severity":"CRITICAL","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4017","repo":"csharpsquid","name":"Method signatures should not contain nested generic types","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S2197","repo":"csharpsquid","name":"Modulus results should not be checked for direct equality","severity":"CRITICAL","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S122","repo":"csharpsquid","name":"Statements should be on separate lines","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S2077","repo":"csharpsquid","name":"Formatting SQL queries is security-sensitive","severity":"CRITICAL","lang":"cs","params":[],"type":"SECURITY_HOTSPOT"},{"key":"csharpsquid:S1309","repo":"csharpsquid","name":"Track uses of in-source issue suppressions","severity":"INFO","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4818","repo":"csharpsquid","name":"Using Sockets is security-sensitive","severity":"CRITICAL","lang":"cs","params":[],"type":"SECURITY_HOTSPOT"},{"key":"csharpsquid:S3604","repo":"csharpsquid","name":"Member initializer values should not be redundant","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3967","repo":"csharpsquid","name":"Multidimensional arrays should not be used","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S113","repo":"csharpsquid","name":"Files should contain an empty newline at the end","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1994","repo":"csharpsquid","name":"\"for\" loop increment clauses should modify the loops' counters","severity":"CRITICAL","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4226","repo":"csharpsquid","name":"Extensions should be in separate namespaces","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4225","repo":"csharpsquid","name":"Extension methods should not extend \"object\"","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3257","repo":"csharpsquid","name":"Declarations and initializations should be as concise as possible","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3376","repo":"csharpsquid","name":"Attribute, EventArgs, and Exception type names should end with the type being extended","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3253","repo":"csharpsquid","name":"Constructor and destructor declarations should not be redundant","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3256","repo":"csharpsquid","name":"\"string.IsNullOrEmpty\" should be used","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1075","repo":"csharpsquid","name":"URIs should not be hardcoded","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3011","repo":"csharpsquid","name":"Changing or bypassing accessibility is security-sensitive","severity":"CRITICAL","lang":"cs","params":[],"type":"SECURITY_HOTSPOT"},{"key":"csharpsquid:S3254","repo":"csharpsquid","name":"Default parameter values should not be passed as arguments","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3251","repo":"csharpsquid","name":"Implementations should be provided for \"partial\" methods","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3937","repo":"csharpsquid","name":"Number patterns should be regular","severity":"CRITICAL","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4462","repo":"csharpsquid","name":"Calls to \"async\" methods should not be blocking","severity":"BLOCKER","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1192","repo":"csharpsquid","name":"String literals should not be duplicated","severity":"MINOR","lang":"cs","params":[{"key":"threshold","htmlDesc":"Number of times a literal must be duplicated to trigger an issue.","defaultValue":"3","type":"INTEGER"}],"type":"CODE_SMELL"},{"key":"csharpsquid:S1643","repo":"csharpsquid","name":"Strings should not be concatenated using '+' in a loop","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S101","repo":"csharpsquid","name":"Types should be named in PascalCase","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S100","repo":"csharpsquid","name":"Methods and properties should be named in PascalCase","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S2737","repo":"csharpsquid","name":"\"catch\" clauses should do more than rethrow","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S2292","repo":"csharpsquid","name":"Trivial properties should be auto-implemented","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3261","repo":"csharpsquid","name":"Namespaces should not be empty","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3996","repo":"csharpsquid","name":"URI properties should not be strings","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1698","repo":"csharpsquid","name":"\"==\" should not be used when \"Equals\" is overridden","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3997","repo":"csharpsquid","name":"String URI overloads should call \"System.Uri\" overloads","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1697","repo":"csharpsquid","name":"Short-circuit logic should be used to prevent null pointer dereferences in conditionals","severity":"MAJOR","lang":"cs","params":[],"type":"BUG"},{"key":"csharpsquid:S3876","repo":"csharpsquid","name":"Strings or integral types should be used for indexers","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3994","repo":"csharpsquid","name":"URI Parameters should not be strings","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1696","repo":"csharpsquid","name":"NullReferenceException should not be caught","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4049","repo":"csharpsquid","name":"Properties should be preferred","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3995","repo":"csharpsquid","name":"URI return values should not be strings","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3874","repo":"csharpsquid","name":"\"out\" and \"ref\" parameters should not be used","severity":"CRITICAL","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3992","repo":"csharpsquid","name":"Assemblies should explicitly specify COM visibility","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4047","repo":"csharpsquid","name":"Generics should be used when appropriate","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1210","repo":"csharpsquid","name":"\"Equals\" and the comparison operators should be overridden when implementing \"IComparable\"","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1694","repo":"csharpsquid","name":"An abstract class should have both abstract and concrete methods","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3872","repo":"csharpsquid","name":"Parameter names should not duplicate the names of their methods","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3993","repo":"csharpsquid","name":"Custom attributes should be marked with \"System.AttributeUsageAttribute\"","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1451","repo":"csharpsquid","name":"Track lack of copyright and license headers","severity":"BLOCKER","lang":"cs","params":[{"key":"headerFormat","htmlDesc":"Expected copyright and license header.","defaultValue":"/*\n * SonarQube, open source software quality management tool.\n * Copyright (C) 2008-2013 SonarSource\n * mailto:contact AT sonarsource DOT com\n *\n * SonarQube is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * SonarQube is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */","type":"TEXT"},{"key":"isRegularExpression","htmlDesc":"Whether the headerFormat is a regular expression.","defaultValue":"false","type":"BOOLEAN"}],"type":"CODE_SMELL"},{"key":"csharpsquid:S1450","repo":"csharpsquid","name":"Private fields only used as local variables in methods should become local variables","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3990","repo":"csharpsquid","name":"Assemblies should be marked as CLS compliant","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4041","repo":"csharpsquid","name":"Type names should not match namespaces","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4040","repo":"csharpsquid","name":"Strings should be normalized to uppercase","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3887","repo":"csharpsquid","name":"Mutable, non-private fields should not be \"readonly\"","severity":"MINOR","lang":"cs","params":[],"type":"BUG"},{"key":"csharpsquid:S2674","repo":"csharpsquid","name":"The length returned from a stream read should be checked","severity":"MINOR","lang":"cs","params":[],"type":"BUG"},{"key":"csharpsquid:S3400","repo":"csharpsquid","name":"Methods should not return constants","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4058","repo":"csharpsquid","name":"Overloads with a \"StringComparison\" parameter should be used","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S2551","repo":"csharpsquid","name":"Shared resources should not be used for locking","severity":"CRITICAL","lang":"cs","params":[],"type":"BUG"},{"key":"csharpsquid:S4059","repo":"csharpsquid","name":"Property names should not match get methods","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4056","repo":"csharpsquid","name":"Overloads with a \"CultureInfo\" or an \"IFormatProvider\" parameter should be used","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3880","repo":"csharpsquid","name":"Finalizers should not be empty","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4057","repo":"csharpsquid","name":"Locales should be set for data types","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1109","repo":"csharpsquid","name":"A close curly brace should be located at the beginning of a line","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1227","repo":"csharpsquid","name":"break statements should not be used except for switch cases","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1226","repo":"csharpsquid","name":"Method parameters, caught exceptions and foreach variables' initial values should not be ignored","severity":"MINOR","lang":"cs","params":[],"type":"BUG"},{"key":"csharpsquid:S4055","repo":"csharpsquid","name":"Literals should not be passed as localized parameters","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4050","repo":"csharpsquid","name":"Operators should be overloaded consistently","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4052","repo":"csharpsquid","name":"Types should not extend outdated base types","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1313","repo":"csharpsquid","name":"Using hardcoded IP addresses is security-sensitive","severity":"MAJOR","lang":"cs","params":[],"type":"SECURITY_HOTSPOT"},{"key":"csharpsquid:S4027","repo":"csharpsquid","name":"Exceptions should provide standard constructors","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3973","repo":"csharpsquid","name":"A conditionally executed single line should be denoted by indentation","severity":"CRITICAL","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4025","repo":"csharpsquid","name":"Child class fields should not differ from parent class fields only by capitalization","severity":"CRITICAL","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S2760","repo":"csharpsquid","name":"Sequential tests should not check the same condition","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4026","repo":"csharpsquid","name":"Assemblies should be marked with \"NeutralResourcesLanguageAttribute\"","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4023","repo":"csharpsquid","name":"Interfaces should not be empty","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4829","repo":"csharpsquid","name":"Reading the Standard Input is security-sensitive","severity":"CRITICAL","lang":"cs","params":[],"type":"SECURITY_HOTSPOT"},{"key":"csharpsquid:S4823","repo":"csharpsquid","name":"Using command line arguments is security-sensitive","severity":"CRITICAL","lang":"cs","params":[],"type":"SECURITY_HOTSPOT"},{"key":"csharpsquid:S4261","repo":"csharpsquid","name":"Methods should be named according to their synchronicities","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4022","repo":"csharpsquid","name":"Enumerations should have \"Int32\" storage","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3052","repo":"csharpsquid","name":"Members should not be initialized to default values","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4142","repo":"csharpsquid","name":"Duplicate values should not be passed as arguments","severity":"MAJOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S4039","repo":"csharpsquid","name":"Interface methods should be callable by derived types","severity":"CRITICAL","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1200","repo":"csharpsquid","name":"Classes should not be coupled to too many other classes (Single Responsibility Principle)","severity":"MAJOR","lang":"cs","params":[{"key":"max","htmlDesc":"Maximum number of classes a single class is allowed to depend upon","defaultValue":"30","type":"INTEGER"}],"type":"CODE_SMELL"},{"key":"csharpsquid:S4158","repo":"csharpsquid","name":"Empty collections should not be accessed or iterated","severity":"MINOR","lang":"cs","params":[],"type":"BUG"},{"key":"csharpsquid:S1449","repo":"csharpsquid","name":"Culture should be specified for \"string\" operations","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S3626","repo":"csharpsquid","name":"Jump statements should not be redundant","severity":"MINOR","lang":"cs","params":[],"type":"CODE_SMELL"},{"key":"csharpsquid:S1206","repo":"csharpsquid","name":"\"Equals(Object)\" and \"GetHashCode()\" should be overridden in pairs","severity":"MINOR","lang":"cs","params":[],"type":"BUG"},{"key":"csharpsquid:S4834","repo":"csharpsquid","name":"Controlling permissions is security-sensitive","severity":"CRITICAL","lang":"cs","params":[],"type":"SECURITY_HOTSPOT"}]}
